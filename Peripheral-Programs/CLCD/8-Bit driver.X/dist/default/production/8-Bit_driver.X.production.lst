

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Mar 28 23:03:26 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0008                     _PORTD	set	8
   234  0049                     _RE1	set	73
   235  004A                     _RE2	set	74
   236  0088                     _TRISD	set	136
   237  0449                     _TRISE1	set	1097
   238  044A                     _TRISE2	set	1098
   239                           
   240                           	psect	strings
   241  0003                     __pstrings:
   242  0003                     stringtab:
   243  0003                     __stringtab:
   244  0003                     stringcode:	
   245                           ;	String table - string pointers are 1 byte each
   246                           
   247  0003                     stringdir:
   248  0003  3000               	movlw	high stringdir
   249  0004  008A               	movwf	10
   250  0005  0804               	movf	4,w
   251  0006  0A84               	incf	4,f
   252  0007  0782               	addwf	2,f
   253  0008                     __stringbase:
   254  0008  3400               	retlw	0
   255  0009                     __end_of__stringtab:
   256  0009                     STR_1:
   257  0009  3448               	retlw	72	;'H'
   258  000A  3465               	retlw	101	;'e'
   259  000B  346C               	retlw	108	;'l'
   260  000C  346C               	retlw	108	;'l'
   261  000D  346F               	retlw	111	;'o'
   262  000E  3400               	retlw	0
   263                           
   264                           	psect	cinit
   265  07FC                     start_initialization:	
   266                           ; #config settings
   267                           
   268  07FC                     __initialization:
   269  07FC                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272  07FC                     __end_of__initialization:
   273  07FC  0183               	clrf	3
   274  07FD  120A  118A  2F44   	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	cstackCOMMON
   277  0070                     __pcstackCOMMON:
   278  0070                     ?_init_clcd:
   279  0070                     ?_init_config:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_main:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_clcd_write:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_init_display_controller:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     clcd_write@mode:	
   292                           ; 1 bytes @ 0x0
   293                           
   294                           
   295                           ; 1 bytes @ 0x0
   296  0070                     	ds	1
   297  0071                     ??_clcd_write:
   298                           
   299                           ; 1 bytes @ 0x1
   300  0071                     	ds	2
   301  0073                     clcd_write@byte:
   302                           
   303                           ; 1 bytes @ 0x3
   304  0073                     	ds	1
   305  0074                     ?_clcd_putch:
   306  0074                     ?_clcd_print:	
   307                           ; 1 bytes @ 0x4
   308                           
   309  0074                     ??_init_display_controller:	
   310                           ; 1 bytes @ 0x4
   311                           
   312  0074                     clcd_putch@addr:	
   313                           ; 1 bytes @ 0x4
   314                           
   315  0074                     clcd_print@addr:	
   316                           ; 1 bytes @ 0x4
   317                           
   318                           
   319                           ; 1 bytes @ 0x4
   320  0074                     	ds	1
   321  0075                     ??_clcd_putch:
   322  0075                     ??_clcd_print:	
   323                           ; 1 bytes @ 0x5
   324                           
   325  0075                     clcd_putch@data:	
   326                           ; 1 bytes @ 0x5
   327                           
   328                           
   329                           ; 1 bytes @ 0x5
   330  0075                     	ds	1
   331  0076                     ??_init_clcd:
   332  0076                     ??_init_config:	
   333                           ; 1 bytes @ 0x6
   334                           
   335  0076                     clcd_print@str:	
   336                           ; 1 bytes @ 0x6
   337                           
   338                           
   339                           ; 1 bytes @ 0x6
   340  0076                     	ds	1
   341  0077                     ??_main:
   342                           
   343                           ; 1 bytes @ 0x7
   344  0077                     	ds	1
   345                           
   346                           	psect	maintext
   347  0744                     __pmaintext:	
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 17 in file "main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;		None
   358 ;; Return value:  Size  Location     Type
   359 ;;                  1    wreg      void 
   360 ;; Registers used:
   361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   362 ;; Tracked objects:
   363 ;;		On entry : B00/0
   364 ;;		On exit  : 0/0
   365 ;;		Unchanged: 0/0
   366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   367 ;;      Params:         0       0       0       0       0
   368 ;;      Locals:         0       0       0       0       0
   369 ;;      Temps:          1       0       0       0       0
   370 ;;      Totals:         1       0       0       0       0
   371 ;;Total ram usage:        1 bytes
   372 ;; Hardware stack levels required when called: 4
   373 ;; This function calls:
   374 ;;		_clcd_print
   375 ;;		_clcd_putch
   376 ;;		_init_config
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382  0744                     _main:	
   383                           ;psect for function _main
   384                           
   385  0744                     l741:	
   386                           ;incstack = 0
   387                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   388                           
   389  0744  120A  118A  2722  120A  118A  	fcall	_init_config
   390  0749                     l14:
   391  0749  3085               	movlw	133
   392  074A  00F7               	movwf	??_main
   393  074B  0877               	movf	??_main,w
   394  074C  00F4               	movwf	clcd_putch@addr
   395  074D  3034               	movlw	52
   396  074E  120A  118A  2733  120A  118A  	fcall	_clcd_putch
   397  0753                     l743:
   398  0753  30C2               	movlw	194
   399  0754  00F7               	movwf	??_main
   400  0755  0877               	movf	??_main,w
   401  0756  00F4               	movwf	clcd_print@addr
   402  0757  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   403  0758  120A  118A  2781  120A  118A  	fcall	_clcd_print
   404  075D  2F49               	goto	l14
   405  075E  120A  118A  2800   	ljmp	start
   406  0761                     __end_of_main:
   407                           
   408                           	psect	text1
   409  0722                     __ptext1:	
   410 ;; *************** function _init_config *****************
   411 ;; Defined at:
   412 ;;		line 13 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 3
   433 ;; This function calls:
   434 ;;		_init_clcd
   435 ;; This function is called by:
   436 ;;		_main
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440  0722                     _init_config:	
   441                           ;psect for function _init_config
   442                           
   443  0722                     l729:	
   444                           ;incstack = 0
   445                           ; Regs used in _init_config: [wreg+status,2+status,0+pclath+cstack]
   446                           
   447  0722  120A  118A  2728  120A  118A  	fcall	_init_clcd
   448  0727                     l9:
   449  0727  0008               	return
   450  0728                     __end_of_init_config:
   451                           
   452                           	psect	text2
   453  0728                     __ptext2:	
   454 ;; *************** function _init_clcd *****************
   455 ;; Defined at:
   456 ;;		line 47 in file "clcd.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0, pclath, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used: 1
   476 ;; Hardware stack levels required when called: 2
   477 ;; This function calls:
   478 ;;		_init_display_controller
   479 ;; This function is called by:
   480 ;;		_init_config
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484  0728                     _init_clcd:	
   485                           ;psect for function _init_clcd
   486                           
   487  0728                     l721:	
   488                           ;incstack = 0
   489                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   490                           
   491                           
   492                           ;clcd.c: 50:     TRISD = 0x00;
   493  0728  1683               	bsf	3,5	;RP0=1, select bank1
   494  0729  1303               	bcf	3,6	;RP1=0, select bank1
   495  072A  0188               	clrf	8	;volatile
   496  072B                     l723:
   497                           
   498                           ;clcd.c: 53:     TRISE2 = 0;
   499  072B  1109               	bcf	9,2	;volatile
   500  072C                     l725:
   501                           
   502                           ;clcd.c: 54:     TRISE1 = 0;
   503  072C  1089               	bcf	9,1	;volatile
   504  072D                     l727:
   505                           
   506                           ;clcd.c: 56:     init_display_controller();
   507  072D  120A  118A  27A9  120A  118A  	fcall	_init_display_controller
   508  0732                     l40:
   509  0732  0008               	return
   510  0733                     __end_of_init_clcd:
   511                           
   512                           	psect	text3
   513  07A9                     __ptext3:	
   514 ;; *************** function _init_display_controller *****************
   515 ;; Defined at:
   516 ;;		line 24 in file "clcd.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, pclath, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   530 ;;      Params:         0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0
   532 ;;      Temps:          2       0       0       0       0
   533 ;;      Totals:         2       0       0       0       0
   534 ;;Total ram usage:        2 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 1
   537 ;; This function calls:
   538 ;;		_clcd_write
   539 ;; This function is called by:
   540 ;;		_init_clcd
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544  07A9                     _init_display_controller:	
   545                           ;psect for function _init_display_controller
   546                           
   547  07A9                     l701:	
   548                           ;incstack = 0
   549                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   550                           
   551                           
   552                           ;clcd.c: 27:     _delay((unsigned long)((30)*(20000000/4000.0)));
   553  07A9  30C3               	movlw	195
   554  07AA  00F5               	movwf	??_init_display_controller+1
   555  07AB  30CD               	movlw	205
   556  07AC  00F4               	movwf	??_init_display_controller
   557  07AD                     u77:
   558  07AD  0BF4               	decfsz	??_init_display_controller,f
   559  07AE  2FAD               	goto	u77
   560  07AF  0BF5               	decfsz	??_init_display_controller+1,f
   561  07B0  2FAD               	goto	u77
   562  07B1                     l703:
   563                           
   564                           ;clcd.c: 30:     clcd_write(0x33, 0);
   565  07B1  01F0               	clrf	clcd_write@mode
   566  07B2  3033               	movlw	51
   567  07B3  120A  118A  2761  120A  118A  	fcall	_clcd_write
   568  07B8                     l705:
   569                           
   570                           ;clcd.c: 31:      _delay((unsigned long)((4100)*(20000000/4000000.0)));
   571  07B8  301B               	movlw	27
   572  07B9  00F5               	movwf	??_init_display_controller+1
   573  07BA  309E               	movlw	158
   574  07BB  00F4               	movwf	??_init_display_controller
   575  07BC                     u87:
   576  07BC  0BF4               	decfsz	??_init_display_controller,f
   577  07BD  2FBC               	goto	u87
   578  07BE  0BF5               	decfsz	??_init_display_controller+1,f
   579  07BF  2FBC               	goto	u87
   580  07C0  0000               	nop
   581                           
   582                           ;clcd.c: 32:      clcd_write(0x33, 0);
   583  07C1  01F0               	clrf	clcd_write@mode
   584  07C2  3033               	movlw	51
   585  07C3  120A  118A  2761  120A  118A  	fcall	_clcd_write
   586  07C8                     l707:
   587                           
   588                           ;clcd.c: 33:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   589  07C8  30A6               	movlw	166
   590  07C9  00F4               	movwf	??_init_display_controller
   591  07CA                     u97:
   592  07CA  0BF4               	decfsz	??_init_display_controller,f
   593  07CB  2FCA               	goto	u97
   594  07CC  0000               	nop
   595  07CD                     l709:
   596                           
   597                           ;clcd.c: 34:      clcd_write(0x33, 0);
   598  07CD  01F0               	clrf	clcd_write@mode
   599  07CE  3033               	movlw	51
   600  07CF  120A  118A  2761  120A  118A  	fcall	_clcd_write
   601  07D4                     l711:
   602                           
   603                           ;clcd.c: 35:      _delay((unsigned long)((1)*(20000000/4000000.0)));
   604  07D4  2FD5               	nop2	;2 cycle nop
   605  07D5  2FD6               	nop2	;2 cycle nop
   606  07D6  0000               	nop
   607  07D7                     l713:
   608                           
   609                           ;clcd.c: 37:     clcd_write(0x38, 0);
   610  07D7  01F0               	clrf	clcd_write@mode
   611  07D8  3038               	movlw	56
   612  07D9  120A  118A  2761  120A  118A  	fcall	_clcd_write
   613  07DE                     l715:
   614                           
   615                           ;clcd.c: 38:      _delay((unsigned long)((100)*(20000000/4000000.0)));
   616  07DE  30A6               	movlw	166
   617  07DF  00F4               	movwf	??_init_display_controller
   618  07E0                     u107:
   619  07E0  0BF4               	decfsz	??_init_display_controller,f
   620  07E1  2FE0               	goto	u107
   621  07E2  0000               	nop
   622                           
   623                           ;clcd.c: 40:      clcd_write(0x01, 0);
   624  07E3  01F0               	clrf	clcd_write@mode
   625  07E4  3001               	movlw	1
   626  07E5  120A  118A  2761  120A  118A  	fcall	_clcd_write
   627  07EA                     l717:
   628                           
   629                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   630  07EA  30A6               	movlw	166
   631  07EB  00F4               	movwf	??_init_display_controller
   632  07EC                     u117:
   633  07EC  0BF4               	decfsz	??_init_display_controller,f
   634  07ED  2FEC               	goto	u117
   635  07EE  0000               	nop
   636  07EF                     l719:
   637                           
   638                           ;clcd.c: 43:     clcd_write(0x0C, 0);
   639  07EF  01F0               	clrf	clcd_write@mode
   640  07F0  300C               	movlw	12
   641  07F1  120A  118A  2761  120A  118A  	fcall	_clcd_write
   642                           
   643                           ;clcd.c: 44:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   644  07F6  30A6               	movlw	166
   645  07F7  00F4               	movwf	??_init_display_controller
   646  07F8                     u127:
   647  07F8  0BF4               	decfsz	??_init_display_controller,f
   648  07F9  2FF8               	goto	u127
   649  07FA  0000               	nop
   650  07FB                     l37:
   651  07FB  0008               	return
   652  07FC                     __end_of_init_display_controller:
   653                           
   654                           	psect	text4
   655  0733                     __ptext4:	
   656 ;; *************** function _clcd_putch *****************
   657 ;; Defined at:
   658 ;;		line 59 in file "clcd.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  data            1    wreg     const unsigned char 
   661 ;;  addr            1    4[COMMON] unsigned char 
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  data            1    5[COMMON] const unsigned char 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         1       0       0       0       0
   674 ;;      Locals:         1       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0
   676 ;;      Totals:         2       0       0       0       0
   677 ;;Total ram usage:        2 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; Hardware stack levels required when called: 1
   680 ;; This function calls:
   681 ;;		_clcd_write
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687  0733                     _clcd_putch:	
   688                           ;psect for function _clcd_putch
   689                           
   690                           
   691                           ;incstack = 0
   692                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
   693                           ;clcd_putch@data stored from wreg
   694  0733  00F5               	movwf	clcd_putch@data
   695  0734                     l731:
   696                           
   697                           ;clcd.c: 59: void clcd_putch(const char data, unsigned char addr);clcd.c: 60: {;clcd.c: 
      +                          61:     clcd_write(addr, 0);
   698  0734  01F0               	clrf	clcd_write@mode
   699  0735  0874               	movf	clcd_putch@addr,w
   700  0736  120A  118A  2761  120A  118A  	fcall	_clcd_write
   701                           
   702                           ;clcd.c: 62:     clcd_write(data, 1);
   703  073B  01F0               	clrf	clcd_write@mode
   704  073C  0AF0               	incf	clcd_write@mode,f
   705  073D  0875               	movf	clcd_putch@data,w
   706  073E  120A  118A  2761  120A  118A  	fcall	_clcd_write
   707  0743                     l43:
   708  0743  0008               	return
   709  0744                     __end_of_clcd_putch:
   710                           
   711                           	psect	text5
   712  0781                     __ptext5:	
   713 ;; *************** function _clcd_print *****************
   714 ;; Defined at:
   715 ;;		line 65 in file "clcd.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  str             1    wreg     PTR const unsigned char 
   718 ;;		 -> STR_1(6), 
   719 ;;  addr            1    4[COMMON] unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  str             1    6[COMMON] PTR const unsigned char 
   722 ;;		 -> STR_1(6), 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         1       0       0       0       0
   733 ;;      Locals:         1       0       0       0       0
   734 ;;      Temps:          1       0       0       0       0
   735 ;;      Totals:         3       0       0       0       0
   736 ;;Total ram usage:        3 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 1
   739 ;; This function calls:
   740 ;;		_clcd_write
   741 ;; This function is called by:
   742 ;;		_main
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746  0781                     _clcd_print:	
   747                           ;psect for function _clcd_print
   748                           
   749                           
   750                           ;incstack = 0
   751                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   752                           ;clcd_print@str stored from wreg
   753  0781  00F6               	movwf	clcd_print@str
   754  0782                     l733:
   755                           
   756                           ;clcd.c: 65: void clcd_print(const char *str, unsigned char addr);clcd.c: 66: {;clcd.c: 
      +                          67:     clcd_write(addr, 0);
   757  0782  01F0               	clrf	clcd_write@mode
   758  0783  0874               	movf	clcd_print@addr,w
   759  0784  120A  118A  2761  120A  118A  	fcall	_clcd_write
   760                           
   761                           ;clcd.c: 69:     while (*str != '\0')
   762  0789  2F9C               	goto	l739
   763  078A                     l735:
   764                           
   765                           ;clcd.c: 70:     {;clcd.c: 71:         clcd_write(*str, 1);
   766  078A  01F0               	clrf	clcd_write@mode
   767  078B  0AF0               	incf	clcd_write@mode,f
   768  078C  0876               	movf	clcd_print@str,w
   769  078D  0084               	movwf	4
   770  078E  120A  118A  2003  120A  118A  	fcall	stringdir
   771  0793  120A  118A  2761  120A  118A  	fcall	_clcd_write
   772  0798                     l737:
   773                           
   774                           ;clcd.c: 72:         str++;
   775  0798  3001               	movlw	1
   776  0799  00F5               	movwf	??_clcd_print
   777  079A  0875               	movf	??_clcd_print,w
   778  079B  07F6               	addwf	clcd_print@str,f
   779  079C                     l739:
   780                           
   781                           ;clcd.c: 69:     while (*str != '\0')
   782  079C  0876               	movf	clcd_print@str,w
   783  079D  0084               	movwf	4
   784  079E  120A  118A  2003  120A  118A  	fcall	stringdir
   785  07A3  3A00               	xorlw	0
   786  07A4  1D03               	skipz
   787  07A5  2FA7               	goto	u61
   788  07A6  2FA8               	goto	u60
   789  07A7                     u61:
   790  07A7  2F8A               	goto	l735
   791  07A8                     u60:
   792  07A8                     l49:
   793  07A8  0008               	return
   794  07A9                     __end_of_clcd_print:
   795                           
   796                           	psect	text6
   797  0761                     __ptext6:	
   798 ;; *************** function _clcd_write *****************
   799 ;; Defined at:
   800 ;;		line 12 in file "clcd.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  byte            1    wreg     unsigned char 
   803 ;;  mode            1    0[COMMON] unsigned char 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  byte            1    3[COMMON] unsigned char 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         1       0       0       0       0
   816 ;;      Locals:         1       0       0       0       0
   817 ;;      Temps:          2       0       0       0       0
   818 ;;      Totals:         4       0       0       0       0
   819 ;;Total ram usage:        4 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_init_display_controller
   825 ;;		_clcd_putch
   826 ;;		_clcd_print
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830  0761                     _clcd_write:	
   831                           ;psect for function _clcd_write
   832                           
   833                           
   834                           ;incstack = 0
   835                           ; Regs used in _clcd_write: [wreg]
   836                           ;clcd_write@byte stored from wreg
   837  0761  00F3               	movwf	clcd_write@byte
   838  0762                     l693:
   839                           
   840                           ;clcd.c: 12: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 13: 
      +                          {;clcd.c: 14:     RE2 = mode;
   841  0762  1870               	btfsc	clcd_write@mode,0
   842  0763  2F65               	goto	u41
   843  0764  2F69               	goto	u40
   844  0765                     u41:
   845  0765  1283               	bcf	3,5	;RP0=0, select bank0
   846  0766  1303               	bcf	3,6	;RP1=0, select bank0
   847  0767  1509               	bsf	9,2	;volatile
   848  0768  2F6C               	goto	u54
   849  0769                     u40:
   850  0769  1283               	bcf	3,5	;RP0=0, select bank0
   851  076A  1303               	bcf	3,6	;RP1=0, select bank0
   852  076B  1109               	bcf	9,2	;volatile
   853  076C                     u54:
   854  076C                     l695:
   855                           
   856                           ;clcd.c: 15:     PORTD = byte;
   857  076C  0873               	movf	clcd_write@byte,w
   858  076D  0088               	movwf	8	;volatile
   859  076E                     l697:
   860                           
   861                           ;clcd.c: 17:     RE1 = 1;
   862  076E  1489               	bsf	9,1	;volatile
   863                           
   864                           ;clcd.c: 18:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   865  076F  30A6               	movlw	166
   866  0770  00F1               	movwf	??_clcd_write
   867  0771                     u137:
   868  0771  0BF1               	decfsz	??_clcd_write,f
   869  0772  2F71               	goto	u137
   870  0773  0000               	nop
   871  0774                     l699:
   872                           
   873                           ;clcd.c: 19:     RE1 = 0;
   874  0774  1283               	bcf	3,5	;RP0=0, select bank0
   875  0775  1303               	bcf	3,6	;RP1=0, select bank0
   876  0776  1089               	bcf	9,1	;volatile
   877                           
   878                           ;clcd.c: 21:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   879  0777  301B               	movlw	27
   880  0778  00F2               	movwf	??_clcd_write+1
   881  0779  309E               	movlw	158
   882  077A  00F1               	movwf	??_clcd_write
   883  077B                     u147:
   884  077B  0BF1               	decfsz	??_clcd_write,f
   885  077C  2F7B               	goto	u147
   886  077D  0BF2               	decfsz	??_clcd_write+1,f
   887  077E  2F7B               	goto	u147
   888  077F  0000               	nop
   889  0780                     l34:
   890  0780  0008               	return
   891  0781                     __end_of_clcd_write:
   892  007E                     btemp	set	126	;btemp
   893  007E                     wtemp0	set	126
   894                           
   895                           	psect	idloc
   896                           
   897                           ;Config register IDLOC0 @ 0x2000
   898                           ;	unspecified, using default values
   899  2000                     	org	8192
   900  2000  3FFF               	dw	16383
   901                           
   902                           ;Config register IDLOC1 @ 0x2001
   903                           ;	unspecified, using default values
   904  2001                     	org	8193
   905  2001  3FFF               	dw	16383
   906                           
   907                           ;Config register IDLOC2 @ 0x2002
   908                           ;	unspecified, using default values
   909  2002                     	org	8194
   910  2002  3FFF               	dw	16383
   911                           
   912                           ;Config register IDLOC3 @ 0x2003
   913                           ;	unspecified, using default values
   914  2003                     	org	8195
   915  2003  3FFF               	dw	16383
   916                           
   917                           	psect	config
   918                           
   919                           ;Config register CONFIG @ 0x2007
   920                           ;	Oscillator Selection bits
   921                           ;	FOSC = 0x3, unprogrammed default
   922                           ;	Watchdog Timer Enable bit
   923                           ;	WDTE = OFF, WDT disabled
   924                           ;	Power-up Timer Enable bit
   925                           ;	PWRTE = 0x1, unprogrammed default
   926                           ;	Brown-out Reset Enable bit
   927                           ;	BOREN = 0x1, unprogrammed default
   928                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   929                           ;	LVP = 0x1, unprogrammed default
   930                           ;	Data EEPROM Memory Code Protection bit
   931                           ;	CPD = 0x1, unprogrammed default
   932                           ;	Flash Program Memory Write Enable bits
   933                           ;	WRT = 0x3, unprogrammed default
   934                           ;	In-Circuit Debugger Mode bit
   935                           ;	DEBUG = 0x1, unprogrammed default
   936                           ;	Flash Program Memory Code Protection bit
   937                           ;	CP = 0x1, unprogrammed default
   938  2007                     	org	8199
   939  2007  3FFB               	dw	16379

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2708
                                              7 COMMON     1     1      0
                         _clcd_print
                         _clcd_putch
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     804
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     804
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     804
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1     924
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     2      1     980
                                              4 COMMON     3     2      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     804
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _init_display_controller
         _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Mar 28 23:03:26 2022

                              l9 0727                                pc 0002                   clcd_print@addr 0074  
                             l14 0749                               l40 0732                               l34 0780  
                             l43 0743                               l37 07FB                               l49 07A8  
                             u40 0769                               u41 0765                               u60 07A8  
                             u61 07A7                               u54 076C                               u77 07AD  
                             u87 07BC                               u97 07CA                               fsr 0004  
                            l701 07A9                              l711 07D4                              l703 07B1  
                            l713 07D7                              l705 07B8                              l721 0728  
                            l731 0734                              l715 07DE                              l707 07C8  
                            l723 072B                              l733 0782                              l717 07EA  
                            l709 07CD                              l725 072C                              l741 0744  
                            l735 078A                              l719 07EF                              l727 072D  
                            l743 0753                              l737 0798                              l729 0722  
                            l739 079C                              l693 0762                              l695 076C  
                            l697 076E                              l699 0774                              _RE1 0049  
                            _RE2 004A                              u107 07E0                              u117 07EC  
                            u127 07F8                              u137 0771                              u147 077B  
                 clcd_putch@addr 0074                              fsr0 0004                   clcd_putch@data 0075  
                           STR_1 0009                             _main 0744                             btemp 007E  
                           start 0000                   clcd_write@byte 0073                   clcd_write@mode 0070  
                          ?_main 0070                     ?_init_config 0070                            _PORTD 0008  
                          _TRISD 0088                            pclath 000A                            status 0003  
                          wtemp0 007E                  __initialization 07FC                     __end_of_main 0761  
                         ??_main 0077                           _TRISE1 0449                           _TRISE2 044A  
        _init_display_controller 07A9          __end_of__initialization 07FC                   __pcstackCOMMON 0070  
      ??_init_display_controller 0074                       _clcd_print 0781                       _clcd_putch 0733  
                     _clcd_write 0761                       __pmaintext 0744                       __stringtab 0003  
                        __ptext1 0722                          __ptext2 0728                          __ptext3 07A9  
                        __ptext4 0733                          __ptext5 0781                          __ptext6 0761  
__end_of_init_display_controller 07FC                __end_of_init_clcd 0733             end_of_initialization 07FC  
                    ?_clcd_print 0074                      ?_clcd_putch 0074                      ?_clcd_write 0070  
                  clcd_print@str 0076              start_initialization 07FC                    ??_init_config 0076  
                      ___latbits 0002                        __pstrings 0003                        _init_clcd 0728  
            __end_of_init_config 0728         ?_init_display_controller 0070                     ??_clcd_print 0075  
                   ??_clcd_putch 0075                     ??_clcd_write 0071                      __stringbase 0008  
             __end_of_clcd_print 07A9               __end_of_clcd_putch 0744               __end_of_clcd_write 0781  
                     ?_init_clcd 0070               __end_of__stringtab 0009                      _init_config 0722  
                    ??_init_clcd 0076                        stringcode 0003                         stringdir 0003  
                       stringtab 0003  
